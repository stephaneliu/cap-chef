upstream unicorn {
  server unix:/tmp/unicorn.<%= application %>.sock fail_timeout=0;
}

server {
  listen              80;
  server_name         [[ myawesomeapp.com www.myawesomeapp.com; ]]
  
  location / {
    # redirect all non-ssl request to ssl
    rewrite ^ [[ https://www.myawesomapp.com$request_uri; ]]
  }
}

server {
  root                      <%= current_path %>/public;
  listen 443                default deferred;
  server_name               [[ myawwesomapp.com www.myawesomeapp.com; ]]

  ssl                       on;
  ssl_certificate           [[ /etc/ssl/private/you-certificate.crt; ]]
  ssl_certificate_key       [[ /etc/ssl/private/your-key.key; ]]

  ssl_session_timeout       5m;

  ssl_protocols             SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers               HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;


  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /system/maintenance.html last;
    break;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 70;
}
